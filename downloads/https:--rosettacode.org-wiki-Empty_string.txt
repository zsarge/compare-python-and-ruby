====RUBY=====
s = ""
s = String.new
s = "any string"; s.clear

====RUBY=====
s == ""
s.eql?("")
s.empty?
s.length == 0
s[/\A\z/]
 
# also silly things like
s.each_char.to_a.empty?

====RUBY=====
s != ""
s.length > 0
s[/./m]

====RUBY=====
if s then puts "not empty" end  # This code is wrong!

====RUBY=====
var s = "";
var s = String.new;

====RUBY=====
s == "";
s.length == 0;
s.is_empty;
s ~~ /^\z/;
s ~~ /\A\z/;

====RUBY=====
s != "";
s.length > 0;
s ~~ /./s;
s !~ /^\z/;

====PYTHON=====
 
s = ''
# or:
s = str()
 
if not s or s == '':
   print("String is empty")
 
if len(s) == 0:
    print("String is empty")
else:
    print("String not empty")
 
 
# boolean test function for python2 and python3
# test for regular (non-unicode) strings
# unicode strings
# None 
def emptystring(s):
   if isinstance(s, (''.__class__ , u''.__class__) ):
      if len(s) == 0: 
         return True
      else 
         return False
 
   elif s is None:
        return True
 

