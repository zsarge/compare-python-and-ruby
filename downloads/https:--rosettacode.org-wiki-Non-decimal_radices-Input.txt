====RUBY=====
dec1 = "0123459"
hex2 = "abcf123"
oct3 = "7651"
bin4 = "101011001"
 
p dec1.to_i   # => 123459
p hex2.hex    # => 180154659
p oct3.oct    # => 4009
# nothing for binary

====RUBY=====
p dec1.to_i(10)         # => 123459
p hex2.to_i(16)         # => 180154659
p oct3.to_i(8)          # => 4009
p bin4.to_i(2)          # => 345
p "xyz9".to_i(10)       # => 0  If there is not a valid letter, 0 is returned.

====RUBY=====
p ((Integer(dec1) rescue nil)) # => ArgumentError: invalid value for Integer: "0123459"
p Integer(dec1.sub(/^0+/,""))  # => 123459
p Integer("0d" + dec1)         # => 123459
p Integer("0x" + hex2)         # => 180154659
p Integer("0"  + oct3)         # => 4009
p Integer("0o" + oct3)         # => 4009
p Integer("0b" + bin4)         # => 345

====RUBY=====
p dec1.to_i(0)      # => 5349 (which is 12345 in octal, the 9 is discarded)
p ("0d" + dec1).to_i(0)        # => 123459
p ("0x" + hex2).to_i(0)        # => 180154659
p ("0"  + oct3).to_i(0)        # => 4009
p ("0o" + oct3).to_i(0)        # => 4009
p ("0b" + bin4).to_i(0)        # => 345

====RUBY=====
require 'scanf'
p dec1.scanf("%d")  # => [123459]
p hex2.scanf("%x")  # => [180154659]
p oct3.scanf("%o")  # => [4009]
# no scanf specifier for binary numbers.

====RUBY=====
var dec            = '0123459';
var hex_noprefix   = 'abcf123';
var hex_withprefix = '0xabcf123';
var oct_noprefix   = '7651';
var oct_withprefix = '07651';
var bin_noprefix   = '101011001';
var bin_withprefix = '0b101011001';
 
say dec.num;                    # => 123459
say hex_noprefix.hex;           # => 180154659
say hex_withprefix.hex;         # => 180154659
say oct_noprefix.oct;           # => 4009
say oct_withprefix.oct;         # => 4009
say bin_noprefix.bin;           # => 345
say bin_withprefix.bin;         # => 345

====PYTHON=====
>>> text = '100'
>>> for base in range(2,21):
    print ("String '%s' in base %i is  %i in base 10" 
           % (text, base, int(text, base)))
 
 
String '100' in base 2 is  4 in base 10
String '100' in base 3 is  9 in base 10
String '100' in base 4 is  16 in base 10
String '100' in base 5 is  25 in base 10
String '100' in base 6 is  36 in base 10
String '100' in base 7 is  49 in base 10
String '100' in base 8 is  64 in base 10
String '100' in base 9 is  81 in base 10
String '100' in base 10 is  100 in base 10
String '100' in base 11 is  121 in base 10
String '100' in base 12 is  144 in base 10
String '100' in base 13 is  169 in base 10
String '100' in base 14 is  196 in base 10
String '100' in base 15 is  225 in base 10
String '100' in base 16 is  256 in base 10
String '100' in base 17 is  289 in base 10
String '100' in base 18 is  324 in base 10
String '100' in base 19 is  361 in base 10
String '100' in base 20 is  400 in base 10

