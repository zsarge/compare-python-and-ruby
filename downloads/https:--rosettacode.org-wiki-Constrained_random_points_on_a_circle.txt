====RUBY=====
points = (1..100).map do
  # choose a random radius and angle
  angle = rand * 2.0 * Math::PI
  rad   = rand * 5.0 + 10.0
  # convert back from polar to cartesian coordinates
  [rad * Math::cos(angle), rad * Math::sin(angle)].map(&:round)
end
 
(-15..15).each do |row|
  puts (-15..15).map { |col| points.include?([row, col]) ? "X" : " " }.join
end
 
load 'raster_graphics.rb'
 
pixmap = Pixmap.new(321,321)
pixmap.draw_circle(Pixel.new(160,160),90,RGBColour::BLACK)
pixmap.draw_circle(Pixel.new(160,160),160,RGBColour::BLACK)
points.each {|(x,y)| pixmap[10*(x+16),10*(y+16)] = RGBColour::BLACK}
pngfile = __FILE__
pngfile[/\.rb/] = ".png"
pixmap.save_as_png(pngfile)

====RUBY=====
r2 = 10*10..15*15
range = (-15..15).to_a
points = range.product(range).select {|i,j| r2.cover?(i*i + j*j)}
 
puts "Precalculate: #{points.size}"
pt = Hash.new("  ")
points.sample(100).each{|ij| pt[ij] = " o"}
puts range.map{|i| range.map{|j| pt[[i,j]]}.join}

====RUBY=====
var points = [];
while (points.len < 100) {
    var (x, y) = 2.of{31.rand.int - 15}...;
    var r2 = (x**2 + y**2);
    if ((r2 >= 100) && (r2 <= 225)) {
        points.append([x, y]);
    }
}
 
print <<'HEAD';
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox 0 0 400 400
200 200 translate 10 10 scale
0 setlinewidth
1 0 0 setrgbcolor
0 0 10 0 360 arc stroke
0 0 15 360 0 arcn stroke
0 setgray
/pt { .1 0 360 arc fill } def
HEAD
 
points.each { |pt| say "#{pt.join(' ')} pt" };
print '%%EOF';

====PYTHON=====
>>> from collections import defaultdict
>>> from random import choice
>>> world = defaultdict(int)
>>> possiblepoints = [(x,y) for x in range(-15,16)
		  for y in range(-15,16)
		  if 10 <= abs(x+y*1j) <= 15]
>>> for i in range(100): world[choice(possiblepoints)] += 1
 
>>> for x in range(-15,16):
	print(''.join(str(min([9, world[(x,y)]])) if world[(x,y)] else ' '
			  for y in range(-15,16)))
 
 
 
             1     1           
          1 1                  
      11 1     1  1     1      
     111  1     1211           
      1   2    1 1    11       
      1  11         21         
     1   1            11  1    
   1  2                1 1     
 
 1  2                          
   1 1                      1  
   1 1                         
   2                      11   
  1                         1  
                         1     
 
 
  1                          1 
                         1     
                         2     
                            1  
     1                  1 1    
      1                2   1   
   1   3            11  2      
    11   1    1      1   2     
            1   1    2         
        1  1                   
         1      1     1        
          2 2   1              
               1               

====PYTHON=====
>>> for i in range(1000): world[choice(possiblepoints)] += 1
 
>>> for x in range(-15,16):
	print(''.join(str(min([9, world[(x,y)]])) if world[(x,y)] else ' '
			  for y in range(-15,16)))
 
 
               2               
          41341421333          
        5133333131253 1        
      5231514 14214721 24      
     326 21222143234122322     
    54235153132123344125 22    
   32331432         2422 33    
   5453135           4144344   
  132595               323123  
  4 6353               432224  
 5 4323                 3 5313 
 23214                   41433 
 42454                   33342 
 332 4                   34314 
 142 1                   35 53 
124211                   53131 
 22221                   152 4 
 22213                   34562 
 654 4                   4 212 
 24354                   52232 
 544222                 283323 
  411123               453325  
  251321               124332  
   2124134           2443226   
   2 113315         64324334   
    2412452 324 32121132363    
      4222434324635 5433       
      3113333123432112633      
        2131181233  424        
          47414232164          
               4               

