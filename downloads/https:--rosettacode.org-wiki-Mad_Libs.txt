====RUBY=====
puts "Enter a story, terminated by an empty line:"
story = ""
until (line = gets).chomp.empty?
  story << line
end
 
story.scan(/(?<=[<]).+?(?=[>])/).uniq.each do |var|
  print "Enter a value for '#{var}': "
  story.gsub!(/<#{var}>/, gets.chomp)
end
 
puts
puts story

====RUBY=====
var story = ARGF.slurp;
 
var blanks = Hash.new;
while (var m = /<(.*?)>/.gmatch(story)) {
    blanks.append(m[0]);
}
 
blanks.keys.sort.each { |blank|
    var replacement = Sys.scanln("#{blank}: ");
    blanks{blank} = replacement;
}
 
print story.gsub(/<(.*?)>/, {|s1| blanks{s1} });

====PYTHON=====
import re
 
# Optional Python 2.x compatibility
#try: input = raw_input
#except: pass
 
template = '''<name> went for a walk in the park. <he or she>
found a <noun>. <name> decided to take it home.'''
 
def madlibs(template):
    print('The story template is:\n' + template)
    fields = sorted(set( re.findall('<[^>]+>', template) ))
    values = input('\nInput a comma-separated list of words to replace the following items'
                   '\n  %s: ' % ','.join(fields)).split(',')
    story = template
    for f,v in zip(fields, values):
        story = story.replace(f, v)
    print('\nThe story becomes:\n\n' + story)
 
madlibs(template)

