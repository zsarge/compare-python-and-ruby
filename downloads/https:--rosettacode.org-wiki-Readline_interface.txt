====RUBY=====
require "readline"
require "abbrev"
 
commands = %w[search download open help history quit url prev past]
Readline.completion_proc = commands.abbrev.to_proc
 
while buf = Readline.readline(">", true) # true means: keep history.
  exit if buf.strip == "quit"
  p buf
end

====RUBY=====
require('Term::ReadLine')
 
var term = %O<Term::ReadLine>.new('Example')
 
term.addhistory('foo')
term.addhistory('bar')
 
loop {
    var cmd = term.readline("Prompt: ") \\ break
 
    if (cmd ~~ %w[q quit]) {
        break
    }
 
    say "You inserted <<#{cmd}>>"
}

====PYTHON=====
#!/usr/bin/env python3
 
#
# A simple readline demo that does nothing.
# Interactive line editing and history active
#
 
import readline
 
while True:
    try:
        print(input('> '))
    except:
        break
 

