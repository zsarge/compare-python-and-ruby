====RUBY=====
head = ListNode.new("a", ListNode.new("b", ListNode.new("c")))
head.insertAfter("b", "b+")
 
# then:
head.each {|node| print node.value, ","}
puts
 
# or
current = head
begin
  print current.value, ","
end while current = current.succ
puts

====RUBY=====
var list = 'a':'b':'c':nil;
#var list = ['a', ['b', ['c']]];
#var list = Pair.new('a', Pair.new('b', Pair.new('c', nil)));
 
for (var l = list; l != nil; l = l[1]) {
    say l[0];
}

====PYTHON=====
for node in lst:
    print node.value

====PYTHON=====
class LinkedList(object):
  """USELESS academic/classroom example of a linked list implemented in Python.
     Don't ever consider using something this crude!  Use the built-in list() type!
  """
  def __init__(self, value, next):
    self.value = value;
    self.next = next
  def __iter__(self):
    node = self
    while node != None:
      yield node.value
      node = node.next;
 
lst = LinkedList("big",  next=
  LinkedList(value="fjords",next=
    LinkedList(value="vex",   next=
      LinkedList(value="quick", next=
        LinkedList(value="waltz", next=
          LinkedList(value="nymph", next=None))))));
 
for value in lst:
  print value,;
print

