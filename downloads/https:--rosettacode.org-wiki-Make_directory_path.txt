====RUBY=====
require 'fileutils'
FileUtils.mkdir_p("path/to/dir") 

====RUBY=====
Dir.new(Dir.cwd, "path", "to", "dir").make_path;   # works cross-platform

====PYTHON=====
 
from errno import EEXIST
from os import mkdir, curdir
from os.path import split, exists
 
def mkdirp(path, mode=0777):
    head, tail = split(path)
    if not tail:
        head, tail = split(head)
    if head and tail and not exists(head):
        try:
            mkdirp(head, mode)
        except OSError as e:
            # be happy if someone already created the path
            if e.errno != EEXIST:
                raise
        if tail == curdir:  # xxx/newdir/. exists if xxx/newdir exists
            return
    try:
        mkdir(path, mode)
    except OSError as e:
        # be happy if someone already created the path
        if e.errno != EEXIST:
            raise
 

====PYTHON=====
 
def mkdirp(path):
    try:
        os.makedirs(path)
    except OSError as exc: # Python >2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else: raise
 

====PYTHON=====
 
def mkdirp(path):
    os.makedirs(path, exist_ok=True)
 

