====RUBY=====
class String
  def strip_control_characters()
    chars.each_with_object("") do |char, str|
      str << char unless char.ascii_only? and (char.ord < 32 or char.ord == 127)
    end
  end
 
  def strip_control_and_extended_characters()
    chars.each_with_object("") do |char, str|
      str << char if char.ascii_only? and char.ord.between?(32,126)
    end
  end
end
 
p s = "\ba\x00b\n\rc\fd\xc3\x7ffoo"
p s.strip_control_characters
p s.strip_control_and_extended_characters

====RUBY=====
var str = "\ba\x00b\n\rc\fd\xc3\x7ffoo"
 
var letters = str.chars.map{.ord}
say letters.map{.chr}.join.dump
 
var nocontrols = letters.grep{ (_ > 32) && (_ != 127) }
say nocontrols.map{.chr}.join.dump
 
var noextended = nocontrols.grep{ _ < 127 }
say noextended.map{.chr}.join.dump

====PYTHON=====
stripped = lambda s: "".join(i for i in s if 31 < ord(i) < 127)
 
print(stripped("\ba\x00b\n\rc\fd\xc3"))

